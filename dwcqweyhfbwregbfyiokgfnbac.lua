local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\14\23","\188\32\57\213"),function(v42) if (v9(v42,2)==(253 -172)) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=v10(v8(v42,16));if v30 then local v112=0;local v113;while true do if (v112==1) then return v113;end if (v112==0) then v113=v13(v101,v30);v30=nil;v112=1;end end else return v101;end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-(2 -1))))%(2^(((v45-(1 -0)) -(v44-1)) + (2 -1))) ;return v102-(v102%1) ;else local v103=0;local v104;while true do if (v103==0) then v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (1==v47) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==0) then v55=v34();v56=v34();v54=1;end if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==1) and  -1) or 1 ;v54=3;end if (v54==3) then if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==2) then v64={};for v114=1, #v63 do v64[v114]=v10(v9(v11(v63,v114,v114)));end v62=3;end if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (1==v62) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (3==v62) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=0;local v80;local v81;while true do if (1==v79) then if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v70[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v108=v31(v83,933 -(857 + 74) ,3);local v109=v31(v83,4,6);local v110={v33(),v33(),nil,nil};if (v108==0) then local v121=0;while true do if (v121==0) then v110[3]=v33();v110[4]=v33();break;end end elseif (v108==1) then v110[3]=v34();elseif (v108==2) then v110[3]=v34() -(2^(584 -(367 + 201))) ;elseif (v108==3) then local v132=0;while true do if (0==v132) then v110[3]=v34() -((929 -(214 + 713))^16) ;v110[2 + 2 ]=v33();break;end end end if (v31(v109,1,1)==1) then v110[2]=v70[v110[2]];end if (v31(v109,2,1 + 1 )==1) then v110[880 -(282 + 595) ]=v70[v110[3]];end if (v31(v109,1640 -(1523 + 114) ,3)==1) then v110[4]=v70[v110[4]];end v65[v82]=v110;end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v105=0,v94 do if (v105>=v88) then v92[v105-v88 ]=v93[v105 + 1 ];else v96[v105]=v93[v105 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do v98=v86[v90];v99=v98[1];if (v99<=37) then if (v99<=(17 + 1)) then if (v99<=(11 -3)) then if (v99<=3) then if (v99<=1) then if (v99==0) then local v135=v98[2];local v136,v137=v89(v96[v135](v96[v135 + 1 ]));v91=(v137 + v135) -(1066 -(68 + 997)) ;local v138=0;for v238=v135,v91 do local v239=0;while true do if (0==v239) then v138=v138 + 1 ;v96[v238]=v136[v138];break;end end end else v90=v98[1273 -(226 + 1044) ];end elseif (v99==2) then do return;end else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=5) then if (v99==4) then v96[v98[2]]=v96[v98[3]];else local v144=0;local v145;while true do if (v144==0) then v145=v96[v98[17 -13 ]];if  not v145 then v90=v90 + 1 ;else local v375=0;while true do if (v375==0) then v96[v98[2]]=v145;v90=v98[3];break;end end end break;end end end elseif (v99<=(123 -(32 + 85))) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99>7) then v96[v98[2 + 0 ]]=v98[1 + 2 ];else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99<=13) then if (v99<=10) then if (v99>9) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[959 -(892 + 65) ]]=v98[3] + v96[v98[4]] ;end elseif (v99<=11) then v96[v98[2]]=v74[v98[3]];elseif (v99==12) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99<=15) then if (v99==14) then if v96[v98[4 -2 ]] then v90=v90 + (1 -0) ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]];end elseif (v99<=16) then local v153=v98[2];v96[v153]=v96[v153](v21(v96,v153 + 1 ,v98[3]));elseif (v99>17) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else for v317=v98[2],v98[4 -1 ] do v96[v317]=nil;end end elseif (v99<=27) then if (v99<=22) then if (v99<=20) then if (v99>(369 -(87 + 263))) then local v155=0;local v156;local v157;local v158;while true do if (1==v155) then v158=v96[v156] + v157 ;v96[v156]=v158;v155=2;end if (v155==2) then if (v157>0) then if (v158<=v96[v156 + 1 ]) then local v405=0;while true do if (v405==0) then v90=v98[3];v96[v156 + 3 ]=v158;break;end end end elseif (v158>=v96[v156 + 1 ]) then local v406=0;while true do if (v406==0) then v90=v98[3];v96[v156 + 3 ]=v158;break;end end end break;end if (v155==0) then v156=v98[2];v157=v96[v156 + 2 ];v155=1;end end else local v159=v98[2];local v160=v96[v98[3]];v96[v159 + 1 ]=v160;v96[v159]=v160[v98[4]];end elseif (v99==21) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]]=v73[v98[3]];end elseif (v99<=24) then if (v99>23) then local v168=0;local v169;local v170;local v171;local v172;while true do if (v168==2) then for v357=v169,v91 do v172=v172 + 1 + 0 ;v96[v357]=v170[v172];end break;end if (v168==1) then v91=(v171 + v169) -1 ;v172=0;v168=2;end if (0==v168) then v169=v98[2];v170,v171=v89(v96[v169](v21(v96,v169 + (181 -(67 + 113)) ,v91)));v168=1;end end else local v173=0;local v174;while true do if (0==v173) then v174=v98[2];v96[v174]=v96[v174](v21(v96,v174 + 1 ,v91));break;end end end elseif (v99<=25) then local v175=0;local v176;while true do if (v175==0) then v176=v98[2];v96[v176]=v96[v176](v21(v96,v176 + 1 ,v98[3]));break;end end elseif (v99>26) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v96[v98[2]]==v96[v98[4]]) then v90=v90 + (2 -1) ;else v90=v98[3];end elseif (v99<=32) then if (v99<=29) then if (v99>28) then v96[v98[2]]=v96[v98[3]][v98[4]];else local v179=0;local v180;local v181;local v182;while true do if (v179==0) then v180=v98[2 + 0 ];v181=v96[v180];v179=1;end if (v179==1) then v182=v96[v180 + 2 ];if (v182>0) then if (v181>v96[v180 + 1 ]) then v90=v98[3];else v96[v180 + 3 ]=v181;end elseif (v181<v96[v180 + 1 ]) then v90=v98[3];else v96[v180 + 3 ]=v181;end break;end end end elseif (v99<=(119 -89)) then local v183=0;local v184;while true do if (v183==0) then v184=v98[2];do return v96[v184](v21(v96,v184 + 1 ,v98[955 -(802 + 150) ]));end break;end end elseif (v99==31) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2]]=v74[v98[3]];end elseif (v99<=34) then if (v99>33) then do return v96[v98[5 -3 ]]();end else local v185=0;local v186;local v187;local v188;while true do if (v185==0) then v186=v98[2];v187=v96[v186 + (3 -1) ];v185=1;end if (v185==2) then if (v187>0) then if (v188<=v96[v186 + 1 ]) then v90=v98[3];v96[v186 + 3 ]=v188;end elseif (v188>=v96[v186 + 1 ]) then v90=v98[3];v96[v186 + 3 ]=v188;end break;end if (v185==1) then v188=v96[v186] + v187 ;v96[v186]=v188;v185=2;end end end elseif (v99<=35) then local v189=0;local v190;while true do if (0==v189) then v190=v98[2];v96[v190]=v96[v190](v96[v190 + 1 ]);break;end end elseif (v99==36) then local v281=0;local v282;local v283;local v284;while true do if (v281==0) then v282=v98[2];v283=v96[v282];v281=1;end if (1==v281) then v284=v98[3];for v387=1,v284 do v283[v387]=v96[v282 + v387 ];end break;end end else local v285=v98[2];v96[v285]=v96[v285](v21(v96,v285 + 1 ,v91));end elseif (v99<=56) then if (v99<=46) then if (v99<=41) then if (v99<=(29 + 10)) then if (v99==(1035 -(915 + 82))) then local v191=v98[2];local v192=v96[v191];for v240=v191 + 1 ,v91 do v15(v192,v96[v240]);end else local v193=v98[2];v96[v193](v21(v96,v193 + (2 -1) ,v91));end elseif (v99==40) then do return v96[v98[2]]();end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=43) then if (v99==42) then local v195=0;local v196;while true do if (0==v195) then v196=v96[v98[3 + 1 ]];if  not v196 then v90=v90 + 1 ;else v96[v98[2]]=v196;v90=v98[3];end break;end end else local v197=0;local v198;local v199;local v200;local v201;while true do if (v197==1) then v91=(v200 + v198) -1 ;v201=0;v197=2;end if (v197==2) then for v362=v198,v91 do v201=v201 + 1 ;v96[v362]=v199[v201];end break;end if (v197==0) then v198=v98[2];v199,v200=v89(v96[v198](v21(v96,v198 + 1 ,v91)));v197=1;end end end elseif (v99<=44) then v96[v98[2]]= #v96[v98[3]];elseif (v99==45) then local v287=0;local v288;local v289;local v290;local v291;while true do if (v287==2) then for v390=v288,v91 do v291=v291 + 1 ;v96[v390]=v289[v291];end break;end if (v287==0) then v288=v98[2];v289,v290=v89(v96[v288](v21(v96,v288 + 1 ,v98[3])));v287=1;end if (1==v287) then v91=(v290 + v288) -1 ;v291=0 -0 ;v287=2;end end else local v292=v98[2];local v293=v96[v292];local v294=v96[v292 + 2 ];if (v294>0) then if (v293>v96[v292 + (1188 -(1069 + 118)) ]) then v90=v98[6 -3 ];else v96[v292 + 3 ]=v293;end elseif (v293<v96[v292 + 1 ]) then v90=v98[3];else v96[v292 + 3 ]=v293;end end elseif (v99<=51) then if (v99<=(104 -56)) then if (v99>47) then v96[v98[2]]= #v96[v98[3]];else local v204=0;local v205;while true do if (0==v204) then v205=v98[2];do return v21(v96,v205,v91);end break;end end end elseif (v99<=49) then local v206=v87[v98[3]];local v207;local v208={};v207=v18({},{[v7("\203\63\68\85\18\241\24","\118\148\96\45\59")]=function(v241,v242) local v243=0;local v244;while true do if (v243==0) then v244=v208[v242];return v244[1][v244[2]];end end end,[v7("\105\141\254\21\163\95\188\244\21\172","\212\54\210\144\112")]=function(v245,v246,v247) local v248=v208[v246];v248[1 + 0 ][v248[2]]=v247;end});for v250=1,v98[4] do v90=v90 + 1 ;local v251=v86[v90];if (v251[1]==15) then v208[v250-1 ]={v96,v251[3]};else v208[v250-1 ]={v73,v251[3]};end v95[ #v95 + 1 ]=v208;end v96[v98[2]]=v40(v206,v207,v74);elseif (v99==(88 -38)) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v96[v98[2]]==v98[4 + 0 ]) then v90=v90 + 1 ;else v90=v98[794 -(368 + 423) ];end elseif (v99<=53) then if (v99>52) then if  not v96[v98[6 -4 ]] then v90=v90 + 1 ;else v90=v98[3];end else local v210=v98[2];local v211,v212=v89(v96[v210](v21(v96,v210 + 1 ,v98[3])));v91=(v212 + v210) -1 ;local v213=0;for v253=v210,v91 do v213=v213 + 1 ;v96[v253]=v211[v213];end end elseif (v99<=54) then do return;end elseif (v99>(73 -(10 + 8))) then local v298=v98[2];do return v21(v96,v298,v91);end else v96[v98[2]]=v98[3] + v96[v98[15 -11 ]] ;end elseif (v99<=66) then if (v99<=(503 -(416 + 26))) then if (v99<=58) then if (v99==57) then local v214=0;local v215;local v216;while true do if (1==v214) then v96[v215 + 1 ]=v216;v96[v215]=v216[v98[4]];break;end if (0==v214) then v215=v98[2];v216=v96[v98[3]];v214=1;end end else local v217=v98[2];local v218=v96[v217];for v256=v217 + (3 -2) ,v98[3] do v15(v218,v96[v256]);end end elseif (v99<=59) then local v219=v98[2];local v220=v96[v219];for v257=v219 + 1 ,v91 do v15(v220,v96[v257]);end elseif (v99==60) then local v300=0;local v301;while true do if (v300==0) then v301=v98[2];v96[v301](v21(v96,v301 + 1 ,v91));break;end end else local v302=0;local v303;local v304;local v305;while true do if (v302==0) then v303=v98[2];v304=v96[v303];v302=1;end if (v302==1) then v305=v98[3];for v397=1,v305 do v304[v397]=v96[v303 + v397 ];end break;end end end elseif (v99<=63) then if (v99==62) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v96[v98[2]]==v98[2 + 2 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=64) then local v222=v98[2];v96[v222]=v96[v222](v96[v222 + 1 ]);elseif (v99==65) then v90=v98[3];else v96[v98[2]]={};end elseif (v99<=71) then if (v99<=68) then if (v99==67) then v96[v98[2]]=v73[v98[3]];else local v226=0;local v227;local v228;while true do if (v226==0) then v227=v98[3];v228=v96[v227];v226=1;end if (v226==1) then for v367=v227 + 1 ,v98[4] do v228=v228   .. v96[v367] ;end v96[v98[2]]=v228;break;end end end elseif (v99<=69) then local v229=0;local v230;local v231;while true do if (v229==0) then v230=v98[3];v231=v96[v230];v229=1;end if (v229==1) then for v368=v230 + 1 ,v98[4] do v231=v231   .. v96[v368] ;end v96[v98[2]]=v231;break;end end elseif (v99>70) then local v309=0;local v310;local v311;local v312;local v313;while true do if (v309==1) then v91=(v312 + v310) -1 ;v313=0;v309=2;end if (v309==2) then for v400=v310,v91 do v313=v313 + 1 ;v96[v400]=v311[v313];end break;end if (v309==0) then v310=v98[2];v311,v312=v89(v96[v310](v96[v310 + (1 -0) ]));v309=1;end end else v96[v98[2]]=v98[3];end elseif (v99<=73) then if (v99>(510 -(145 + 293))) then local v232=v98[2];do return v96[v232](v21(v96,v232 + (431 -(44 + 386)) ,v98[3]));end else local v233=v87[v98[3]];local v234;local v235={};v234=v18({},{[v7("\180\185\39\141\143\131\54","\227\235\230\78")]=function(v258,v259) local v260=0;local v261;while true do if (v260==0) then v261=v235[v259];return v261[1][v261[2]];end end end,[v7("\100\140\38\10\235\217\71\27\94\171","\127\59\211\72\111\156\176\41")]=function(v262,v263,v264) local v265=0;local v266;while true do if (v265==0) then v266=v235[v263];v266[1][v266[1488 -(998 + 488) ]]=v264;break;end end end});for v267=1,v98[4] do local v268=0;local v269;while true do if (v268==1) then if (v269[1]==(5 + 10)) then v235[v267-(1 + 0) ]={v96,v269[3]};else v235[v267-1 ]={v73,v269[3]};end v95[ #v95 + 1 ]=v235;break;end if (v268==0) then v90=v90 + 1 ;v269=v86[v90];v268=1;end end end v96[v98[2]]=v40(v233,v234,v74);end elseif (v99<=74) then v96[v98[2]]={};elseif (v99>75) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else for v352=v98[2],v98[3] do v96[v352]=nil;end end v90=v90 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
